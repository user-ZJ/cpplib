默认程序管理-- update-alternatives
=========================================

Linux 发展到今天，可用的软件已经非常多了。这样自然会有一些软件的功能大致上相同。
例如，同样是编辑器，就有 nvi、vim、emacs、nano，而且我说的这些还只是一部分。
大多数情况下，这样的功能相似的软件都是同时安装在系统里的，可以用它们的名称来执行。
例如，要执行 vim，只要在终端下输入 vim 并按回车就可以了。
不过，有些情况下我们需要用一个相对固定的命令调用这些程序中的一个。
例如，当我们写一个脚本程序时，只要写下 editor，而不希望要为“编辑器是哪个”而操心。
Debian 提供了一种机制来解决这个问题，而 update-alternatives 就是用来实现这种机制的。


update-alternatives --help 命令输出，从该输出中可以获得很多有用信息：

:: 

    用法：update-alternatives [<选项> ...] <命令>

    命令：
    --install <链接> <名称> <路径> <优先级>
        [--slave <链接> <名称> <路径>] ...
                            在系统中加入一组候选项。
    --remove <名称> <路径>   从 <名称> 替换组中去除 <路径> 项。
    --remove-all <名称>      从替换系统中删除 <名称> 替换组。
    --auto <名称>            将 <名称> 的主链接切换到自动模式。
    --display <名称>         显示关于 <名称> 替换组的信息。
    --query <名称>           机器可读版的 --display <名称>.
    --list <名称>            列出 <名称> 替换组中所有的可用候选项。
    --get-selections         列出主要候选项名称以及它们的状态。
    --set-selections         从标准输入中读入候选项的状态。
    --config <名称>          列出 <名称> 替换组中的可选项，并就使用其中
                            哪一个，征询用户的意见。
    --set <名称> <路径>      将 <路径> 设置为 <名称> 的候选项。
    --all                    对所有可选项一一调用 --config 命令。

    <链接>  是指向 /etc/alternatives/<名称> 的符号链接。 (如 /usr/bin/pager)
    <名称>  是该链接替换组的主控名。(如 pager)
    <路径>  是候选项目标文件的位置。（程序的实际路径）(如 /usr/bin/less)
    <优先级>  是一个整数，在自动模式下，这个数字越高的选项，其优先级也就越高。

    选项：
    --altdir <目录>          改变候选项目录。
    --admindir <目录>        设置 statoverride 文件的目录。
    --log <文件>             改变日志文件。
    --force                  就算没有通过自检，也强制执行操作。
    --skip-auto              在自动模式中跳过设置正确候选项的提示
                            (只与 --config 有关)
    --verbose                启用详细输出。
    --quiet                  安静模式，输出尽可能少的信息。不显示输出信息。
    --help                   显示本帮助信息。
    --version                显示版本信息。


gcc不同版本切换
--------------------

.. code-block:: shell

    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 80 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70 --slave /usr/bin/g++ g++ /usr/bin/g++-7 --slave /usr/bin/gcov gcov /usr/bin/gcov-7
    # 用户选择使用那个gcc版本
    sudo update-alternatives --config gcc

gfortran版本切换
----------------------------
.. code-block:: shell

    apt install gfortran-<your GCC version>
    sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-<your GCC version> 70