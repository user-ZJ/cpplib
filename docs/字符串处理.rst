=======================
字符串处理
=======================

char* 转 string
=====================
.. code-block:: cpp

    //方法1
    std::string str(buffer,buffer+length);
    //或
    std::string str(buffer,buffer+length,'\0');
    //如果字符串已存在
    str.assign(buffer,buffer+length);

string 转stream
=====================
.. code-block:: cpp

    stringstream ss(str);

stringstream转string
=======================
.. code-block:: cpp

    stringstream ss;
    ss<< "asdfg";
    string str = ss.str();

char * 转stringstream
=========================
.. code-block:: cpp

    stringstream iss(reinterpret_cast<char *>(buff),length);

stringstream转char *
=============================
.. code-block:: cpp

    stringstream oss;
    const char* oss.str().c_str();

字符串分割
===================
.. code-block:: cpp

    #include<vector>
    #include<sstream>
    #include<iostream>
    using namespace std;


    static void _split(const std::string &s, char delim,
        vector<std::string> &elems) {
        std::stringstream ss(s);
        std::string item;

        while (std::getline(ss, item, delim)) {
            elems.push_back(item);
        }
    }

    std::vector<std::string> split(const std::string &s, char delim=' ') {
        std::vector<std::string> elems;
        _split(s, delim, elems);
        return elems;
    }


字符串转数字
======================
.. code-block:: cpp

    #include <iostream>
    #include <sstream>	//使用stringstream需要引入这个头文件
    using namespace std;
    
    //模板函数：将string类型变量转换为常用的数值类型（此方法具有普遍适用性）
    template <class Type>
    Type stringToNum(const string& str)
    {
        istringstream iss(str);
        Type num;
        iss >> num;
        return num;    
    }
    
    int main(int argc, char* argv[])
    {
        string str("00801");
        cout << stringToNum<int>(str) << endl;
        cout << atoi(str.c_str()) << endl;
        //atoi: string to int
        //atol: string to long
        //atof: string to float
    
        system("pause");
        return 0;
    }